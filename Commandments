#Numerandos
X + Y  adição
X - Y  subtração
X * Y  multiplicação
X / Y  divisao normal(com decimal)
X % Y  resto da divisão
X // Y divisao inteira
X ** Y potencia


#Atribuição
X = normal
X += Y (x = x + y)
X -= Y (x = x - y)
X *= Y (x = x * y)
X /= Y (x = x / y)
X //= Y (x = x // y)
X %= Y (x = x % y)


#VARIADOS
print(f'Fala {X}') -> Assim que se fala algo dentro de um print com mensagem previa

n = x.count() -> conta tamanho da string

x = x.lower() -> lowercases string

x = x.upper() -> maiuscula string

x = x.capitalize() -> maiuscula primeira letra string

x = x.strip() -> remove espaços entre o começo e o fim da string

---------------------------------------------------------------------------------------|
x.count().strip().lower() -> eles tambem podem ser usados e, conjunto como demonstrado |
---------------------------------------------------------------------------------------|

x = str(x) -> transfere em string

round(x,n) -> arredonda 'x' em até 'n' casas decimais

type(x) -> lê o tipo de variavel, se ela carregar uma string ele sabe, se é int ele sabe etc...
 if type(x) == int:
  double(x) -> transforma em double e funciona em todas as formas de variaveis

print(f'nome {} idade {} blabla' .format(x, y)) -> enfia x e y nas casas que faltam respectivamente

#CONDIÇÕES
match x: ->switch do python
  case y | w : -> caso x == y ou x == w
    print()
  case _: -> caso n for nenhuma das anteriores  
  
for x in range(w,y,3): -> repete comando quando 'x' esta no range de 'w' a 'y' aumentando o x de 3 em 3 
  print()

#ERROS
try: -> cria um ambiente em que erros são permitidos(funções dentro de "try" tambem protegem os resultados)

except xxxxxxxxx: -> EXCECTO algum erro(xxxxxxxxx) ocorra a operção em seguida ocorre 
  print("fala algo")
  
raise xxxxxxxxxx: ->

xxxxxx TypeError: -> erro de variavel(caso string para int e vice versa)
xxxxxx NameError: ->
xxxxxx ValueError: -> caso 
xxxxxx ZeroDivsionError:

finally: -> roda independente de erros no programa       
   
   
#LISTA & STRINGS -> listas devem ser declaradas

x = [1,3,46,5,7] -> nesse caso é uma lista mas pode ser uma string tmb

print(x)  -> (1 3 46 5 7)

x[-1] -> (7) -> sequencia é normal mas -2 é penultimo

x.insert(p,n) -> posição e algarismo a ser inserido

n = len(x) -> numero de itens nesse caso {5}
n = max(x) -> maior numero {46}
n = min(x) -> menor numero {1}
n = sum(x) -> soma {62}

x.pop[0] -> remove o primeiro nome da lista
x.append -> adiciona um numero no final da lista

---------------------------------------------|
// caso string seja ("queijo de gorgonzola") |
---------------------------------------------|
 if " de " in x:
  print('esta em teto')


  








